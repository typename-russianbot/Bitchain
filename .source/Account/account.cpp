#include "../../includes/Account/account.h"

// TODO - @defgroup: Resources
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: Account(const string, const string)
Account::Account(const string newUsername, const string newPasskey) : username(newUsername), passkey(newPasskey), keys(0), bitchain() { return; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: ~Account(void)
Account::~Account(void) { return; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TODO - @defgroup: Functions
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: add(void)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: remove(void)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: search(void)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: save(void)
bool Account::save(void) { return false; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: wipe(void)
bool Account::wipe(void) { return false; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: load(const string)
bool Account::load(void) { return false; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TODO - @defgroup: Mutators
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: setUsername(const string) -- done
void Account::setUsername(const string nUsername)
{
    username = nUsername;
    return;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: setPasskey(const string) -- done
void Account::setPasskey(const string nPasskey)
{
    passkey = nPasskey;
    return;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: setKeys(const int) -- done
void Account::setKeys(const int nKeys)
{
    keys = nKeys;
    return;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TODO - @defgroup: Accessors
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: getUsername(void) -- done
const string Account::getUsername(void) { return username; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: getPasskey(void) -- done
const string Account::getPasskey(void) { return passkey; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: getKeys(void) -- done
int Account::getKeys(void) { return keys; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TODO - @defgroup: Overloads
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* @public: operator<<(ostream&, const Account&)
ostream &operator<<(ostream &out, const Account &account)
{
    out << "|--------------------------------------------------|" << endl
        << "   Bitchain Account" << endl
        << "\t- Username:\t" << account.username << endl
        << "\t- Passkey:\t" << account.passkey << endl
        << "\t- Keys:\t\t" << account.keys << endl
        << "|--------------------------------------------------|";

    return out;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
