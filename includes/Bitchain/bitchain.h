#pragma once
#include "node.h"

//& @class: Bitchain
class Bitchain
{
private:
    //* Components
    Node *head; //* @var: head
    Node *tail; //* @var: tail

protected:
    //^ @defgroup: Helper Functions
    //////////////////////////////////////////////////////////////////////////
    //^ @protected: addKey(const Key&)
    //^ @def: adds a key onto the chain

    bool addKey(const Key &);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //^ @protected: rmKey(const string)
    //^ @def: removes a key from the chain

    bool rmKey(const string);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //^ @protected: searchKey(const string)
    //^ @def: searches for a key on the chain

    bool searchKey(const string);
    //////////////////////////////////////////////////////////////////////////

public:
    // TODO - @defgroup: Resources
    //////////////////////////////////////////////////////////////////////////
    //* @public: Bitchain(void)
    //* @def: constructor

    Bitchain(void);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //* @public: ~Bitchain(void)
    //* @def: destructor

    ~Bitchain(void);
    //////////////////////////////////////////////////////////////////////////

    // TODO - @defgroup: Functions
    //////////////////////////////////////////////////////////////////////////
    //* @public: add(const Key&)
    //* @def: adds a key on the chain

    bool add(const Key &);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //* @public: remove(const string)
    //* @def: removes a key from the chain

    bool remove(const string);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //* @public: search(const string)
    //* @def: searches for a key on the chain

    bool search(const string);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //* @public: isEmpty(void)
    //* @def: true = empty, false = not empty

    bool isEmpty(void);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    // TODO @public: save(void) -- in progress
    //* @def: saves bitchain from savefile

    bool save(void);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    // TODO @public: wipe(void) -- in progress
    //* @def: deletes bitchain from savefile

    bool wipe(void);
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    // TODO @public: load(void) -- in progress
    //* @def: deletes bitchain from savefile

    bool load(void);
    //////////////////////////////////////////////////////////////////////////

    // TODO -@defgroup: Overloads
    //////////////////////////////////////////////////////////////////////////
    //* @public: operator<<(ostream&, const Bitchain&)
    //* @def: prints all keys to terminal

    friend ostream &operator<<(ostream &, const Bitchain &);
    //////////////////////////////////////////////////////////////////////////
};